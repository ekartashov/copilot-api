name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        bun-version: [1.2.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ matrix.bun-version }}
        
    - name: Install dependencies
      run: bun install --frozen-lockfile
      
    - name: Run linter
      run: bun run lint
      
    - name: Run tests
      run: bun run test:ci
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: success()
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
    - name: Build project
      run: bun run build
      
  docker-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build development Docker image
      run: docker build -f Dockerfile.dev -t copilot-api:dev .
      
    - name: Build production Docker image
      run: docker build -f Dockerfile -t copilot-api:prod .
      
    - name: Build NPX Docker image
      run: docker build -f Dockerfile.npx -t copilot-api:npx .
      
    - name: Test Docker images
      run: |
        # Test that images can be created and basic commands work
        docker run --rm copilot-api:dev bun --version
        docker run --rm copilot-api:npx node --version